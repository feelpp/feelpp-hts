{
    "Name": "Cylinder Axisymmetric",
    "ShortName": "cylinder-axis",
    "Models":
    {
        "cfpdes":{
            "equations":"magnetic"
        },
        "magnetic":{
            "common":{
                "setup":{
                    "unknown":
                    {
                        "basis":"Pch1",
                        "name":"Atheta",
                        "symbol":"Atheta"
                    }
                }
            },
            "models":[{
                "name":"magnetic_Conductor",
                "materials":"Conductor",
                "setup":{
                    "coefficients":{
                        "c":"x/mu:x:mu",
                        "a":"1/mu/x:mu:x",
                        "f":"0.",
                        "d":"materials_Conductor_sigma*x:materials_Conductor_sigma:x"
                    }
                }
            },{
                "name":"magnetic_Air",
                "materials":"Air",
                "setup":{
                    "coefficients":{
                        "c":"x/mu:x:mu",
                        "a":"1/mu/x:mu:x"
                    }
                }
            }]
        }
    },
    "Parameters":
    {   
        "mu":"4*pi*1e-7",   
        "tf":15,
        "bmax":1.0,
        "rate":"3.0/tf*bmax:tf:bmax",
        // "hsVal":"(t<tf/3.0)*t*rate + (t>tf/3.0)*1.0/(4.0*pi*1e-7) + (t>2.0*tf/3.0)*(-(t-2.0*tf/3.0)*rate):t:tf:rate",
        "hsVal":"bmax - (t-2.0*tf/3.0)*rate + (t<2.0*tf/3.0)*(t-2.0*tf/3.0)*rate + (t<tf/3.0)*(t*rate - bmax):t:tf:rate:bmax",

        "jc":3e8,
        "ec":1e-4,
        "n":20,
        "epsSigma":1e-8
    },
    "Meshes":
    {
        "cfpdes":
        {
            "Import":
            {
                "filename":"$cfgdir/cylinder.geo"
            }
        }
    },
    "Materials":
    {
        "Conductor":
        {
            "markers":["Cylinder"],
            //"sigma":"jc / ec * 1.0 / ( epsSigma + (sqrt((-magnetic_dAtheta_dt_rt)*(-magnetic_dAtheta_dt_rt))/ec )^((n-1.0)/n) ):jc:ec:n:epsSigma:magnetic_dAtheta_dt_rt"
            "sigma":"jc / ec * 1.0 / ( epsSigma + (sqrt((-magnetic_dAtheta_dt)*(-magnetic_dAtheta_dt))/ec )^((n-1.0)/n) ):jc:ec:n:epsSigma:magnetic_dAtheta_dt"
            //"sigma":"jc / ec * 1.0 / ( epsSigma + (sqrt(((magnetic_Atheta-magnetic_Atheta_previous)/timestep)*((magnetic_Atheta-magnetic_Atheta_previous)/timestep))/ec )^((n-1.0)/n) ):jc:ec:n:epsSigma:magnetic_Atheta:magnet_Atheta_previous:timestep"
        },
        "Air":
        {
	        "markers":["Air","Spherical_shell"]
        }
    },
    "InitialConditions":    
    {        
        "magnetic":
        {
            "Atheta":        
            {            
                "Expression":            
                {                
                    "Conductor":                
                    {                    
                        "expr":"0"                
                    }            
                }        
            } 
        }
           
    },
    "BoundaryConditions":
    {
        "magnetic":
        {
            "Dirichlet":
            {
                "magdir":
                {
                    "markers":["Symmetry_line","Exterior_boundary"],
                    "expr":"x/2 *hsVal:x:hsVal"
                }
            }
        }
    },
    "PostProcess":
    {
        "use-model-name":1,
        "magnetic":
        {
            "Exports":
            {
                "fields":"Atheta",
                "expr":
                {
                    "B":
                    {
                        "expr":"{-magnetic_grad_Atheta_1,magnetic_grad_Atheta_0+magnetic_Atheta/x}:magnetic_grad_Atheta_0:magnetic_grad_Atheta_1:magnetic_Atheta:x",
                        "representation":["element"]
                    },
                    "j_th":
                    {
                        "expr":"-materials_Conductor_sigma*magnetic_dAtheta_dt:materials_Conductor_sigma:magnetic_dAtheta_dt",
                        "markers":["Cylinder"]
                    }
                }
            }
        }
    }
}
